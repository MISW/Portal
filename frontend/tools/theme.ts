import fs from "fs";
import resolveConfig, { Colors } from "tailwindcss/resolveConfig";

function flattenColors(colors: Colors): Record<string, string> {
  function go(c: Colors): [key: string, val: string][] {
    return Object.entries(c).flatMap(([key, val]) => {
      if (typeof val === "string") {
        return [[key, val]];
      } else {
        const r = go(val).map(
          ([k, v]) => [`${key}-${k}`, v] as [string, string]
        );
        return r;
      }
    });
  }

  return Object.fromEntries(go(colors));
}

const config = resolveConfig();
const colors = flattenColors(config.theme.colors);
const json = JSON.stringify(colors, null, 2);
const source = `
// DO NOT EDIT THIS FILE
const colors = ${json};
export type Colors = keyof typeof colors;
export default colors;
`;

fs.writeFileSync("src/themes/colors.ts", source, "utf8");
